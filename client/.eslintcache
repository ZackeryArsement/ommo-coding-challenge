[{"C:\\Users\\OEM\\Desktop\\solo-applications\\ommo-coding-challenge\\client\\src\\index.js":"1","C:\\Users\\OEM\\Desktop\\solo-applications\\ommo-coding-challenge\\client\\src\\App.js":"2","C:\\Users\\OEM\\Desktop\\solo-applications\\ommo-coding-challenge\\client\\src\\components\\Homepage.js":"3","C:\\Users\\OEM\\Desktop\\solo-applications\\ommo-coding-challenge\\client\\src\\components\\utils\\queries.js":"4"},{"size":172,"mtime":1652249589586,"results":"5","hashOfConfig":"6"},{"size":881,"mtime":1652253783791,"results":"7","hashOfConfig":"6"},{"size":2546,"mtime":1652256087407,"results":"8","hashOfConfig":"6"},{"size":1414,"mtime":1652255840650,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"xw1hmg",{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\OEM\\Desktop\\solo-applications\\ommo-coding-challenge\\client\\src\\index.js",[],["21","22"],"C:\\Users\\OEM\\Desktop\\solo-applications\\ommo-coding-challenge\\client\\src\\App.js",["23","24"],"import logo from './logo.svg';\nimport './App.css';\nimport Homepage from './components/Homepage';\n\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\n\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n  opts: {\n    mode: 'cors',\n  }\n});\n\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"id_token\");\n  \n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nconst token = localStorage.getItem(\"id_token\")\n\nfunction App() {\n  return (\n    <div>\n      <ApolloProvider client={client}>\n        <Homepage />\n      </ApolloProvider>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\OEM\\Desktop\\solo-applications\\ommo-coding-challenge\\client\\src\\components\\Homepage.js",["25","26","27","28","29","30","31","32"],"import classes from './Homepage.module.css';\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport { useQuery } from '@apollo/client';\r\nimport { QUERY_SENSOR_CALIBRATION_DATA } from './utils/queries';\r\nimport { QUERY_BASE_CALIBRATION_DATA } from './utils/queries';\r\nimport { QUERY_SENSOR_CALIBRATION_OUTPUT } from './utils/queries';\r\nimport { QUERY_PERFORMANCE_VALIDATION_OUTPUT } from './utils/queries';\r\n\r\nconst Homepage = () => {\r\n    const [sensorCalData, setSensorCalData] = useState([]);\r\n    const [baseCalData, setBaseCalData] = useState([]);\r\n    const [sensorCalOutput, setSensorCalOutput] = useState([]);\r\n    const [performanceValOutput, setPerformanceValOutput] = useState([]);\r\n\r\n\r\n    const { loading: loadSensorCalData, data: dataSensorCalData, refetch: refetchSensorCalData } = useQuery(QUERY_SENSOR_CALIBRATION_DATA);\r\n    const { loading: loadBaseCalData, data: dataBaseCalData, refetch: refetchBaseCalData } = useQuery(QUERY_BASE_CALIBRATION_DATA);\r\n    const { loading: loadSensorCalOutput, data: dataSensorCalOutput, refetch: refetchSensorCalOutput } = useQuery(QUERY_SENSOR_CALIBRATION_OUTPUT);\r\n    const { loading: loadPerformanceValOutput, data: dataPerformanceValOutput, refetch: refetchPerformanceValOutput } = useQuery(QUERY_PERFORMANCE_VALIDATION_OUTPUT);\r\n\r\n    useEffect(() => {\r\n        if(!loadSensorCalData){\r\n            setSensorCalData(dataSensorCalData)\r\n            console.log(sensorCalData)\r\n        }\r\n    }, [loadSensorCalData])\r\n\r\n    useEffect(() => {\r\n        if(!loadBaseCalData){\r\n            setBaseCalData(dataBaseCalData)\r\n            console.log(baseCalData)\r\n        }\r\n    }, [loadBaseCalData])\r\n\r\n    useEffect(() => {\r\n        if(!loadSensorCalOutput){\r\n            setSensorCalOutput(dataSensorCalOutput)\r\n            console.log(sensorCalOutput)\r\n        }\r\n    }, [loadSensorCalOutput])\r\n\r\n    useEffect(() => {\r\n        if(!loadPerformanceValOutput){\r\n            setPerformanceValOutput(dataPerformanceValOutput)\r\n            console.log(performanceValOutput)\r\n        }\r\n    }, [loadPerformanceValOutput])\r\n\r\n    return (\r\n        <div className={classes.main}>\r\n            This is the homepage\r\n            <button onClick={()=>console.log(sensorCalData)}>Click Me</button>\r\n            <button onClick={()=>console.log(baseCalData)}>Click Me</button>\r\n            <button onClick={()=>console.log(sensorCalOutput)}>Click Me</button>\r\n            <button onClick={()=>console.log(performanceValOutput)}>Click Me</button>\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Homepage","C:\\Users\\OEM\\Desktop\\solo-applications\\ommo-coding-challenge\\client\\src\\components\\utils\\queries.js",[],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":1,"column":8,"nodeType":"39","messageId":"40","endLine":1,"endColumn":12},{"ruleId":"37","severity":1,"message":"41","line":37,"column":7,"nodeType":"39","messageId":"40","endLine":37,"endColumn":12},{"ruleId":"37","severity":1,"message":"42","line":17,"column":75,"nodeType":"39","messageId":"40","endLine":17,"endColumn":95},{"ruleId":"37","severity":1,"message":"43","line":18,"column":71,"nodeType":"39","messageId":"40","endLine":18,"endColumn":89},{"ruleId":"37","severity":1,"message":"44","line":19,"column":79,"nodeType":"39","messageId":"40","endLine":19,"endColumn":101},{"ruleId":"37","severity":1,"message":"45","line":20,"column":89,"nodeType":"39","messageId":"40","endLine":20,"endColumn":116},{"ruleId":"46","severity":1,"message":"47","line":27,"column":8,"nodeType":"48","endLine":27,"endColumn":27,"suggestions":"49"},{"ruleId":"46","severity":1,"message":"50","line":34,"column":8,"nodeType":"48","endLine":34,"endColumn":25,"suggestions":"51"},{"ruleId":"46","severity":1,"message":"52","line":41,"column":8,"nodeType":"48","endLine":41,"endColumn":29,"suggestions":"53"},{"ruleId":"46","severity":1,"message":"54","line":48,"column":8,"nodeType":"48","endLine":48,"endColumn":34,"suggestions":"55"},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'token' is assigned a value but never used.","'refetchSensorCalData' is assigned a value but never used.","'refetchBaseCalData' is assigned a value but never used.","'refetchSensorCalOutput' is assigned a value but never used.","'refetchPerformanceValOutput' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dataSensorCalData' and 'sensorCalData'. Either include them or remove the dependency array.","ArrayExpression",["58"],"React Hook useEffect has missing dependencies: 'baseCalData' and 'dataBaseCalData'. Either include them or remove the dependency array.",["59"],"React Hook useEffect has missing dependencies: 'dataSensorCalOutput' and 'sensorCalOutput'. Either include them or remove the dependency array.",["60"],"React Hook useEffect has missing dependencies: 'dataPerformanceValOutput' and 'performanceValOutput'. Either include them or remove the dependency array.",["61"],"no-global-assign","no-unsafe-negation",{"desc":"62","fix":"63"},{"desc":"64","fix":"65"},{"desc":"66","fix":"67"},{"desc":"68","fix":"69"},"Update the dependencies array to be: [dataSensorCalData, loadSensorCalData, sensorCalData]",{"range":"70","text":"71"},"Update the dependencies array to be: [baseCalData, dataBaseCalData, loadBaseCalData]",{"range":"72","text":"73"},"Update the dependencies array to be: [dataSensorCalOutput, loadSensorCalOutput, sensorCalOutput]",{"range":"74","text":"75"},"Update the dependencies array to be: [dataPerformanceValOutput, loadPerformanceValOutput, performanceValOutput]",{"range":"76","text":"77"},[1454,1473],"[dataSensorCalData, loadSensorCalData, sensorCalData]",[1633,1650],"[baseCalData, dataBaseCalData, loadBaseCalData]",[1826,1847],"[dataSensorCalOutput, loadSensorCalOutput, sensorCalOutput]",[2043,2069],"[dataPerformanceValOutput, loadPerformanceValOutput, performanceValOutput]"]